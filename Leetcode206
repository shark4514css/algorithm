反转一个单链表。

示例:

输入: 1->2->3->4->5->NULL
输出: 5->4->3->2->1->NULL

迭代法：
var reverseList = function(head) {
  if (head === null || head.next === null) {
    return head;
  }
  let current = head;
  let pre = null;
  while(current) {
    let next = current.next; // 保存当前遍历到的节点下一个节点
    current.next = pre; // 当前节点的next指针指向前驱节点，实现反转
    pre = current; // pre变成当前指针，为下一次循环做准备
    current = next; // 下一个节点变成当前节点
  }
  return pre; // 返回反转后的头指针
}

递归法
var reverseList = function(head) {
  if (head ===null || head.next === null) return head;
  let next = head.next;
  let newList = reverseList(head.next);
  head.next = null;
  next.next = head;
  return newList;
}
